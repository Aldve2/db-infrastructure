name: Terraform Pipeline

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_CLI_ARGS: "-no-color -compact-warnings -input=false"
  TF_CLI_ARGS_plan: "-out=tfplan"
  TF_CLI_ARGS_apply: "-auto-approve"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production  # Recomendado para mejor trazabilidad
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para algunos mÃ³dulos de Terraform

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false  # Evita conflictos con Terraform Cloud

      - name: Setup Terraform Cloud credentials
        run: |
          mkdir -p ~/.terraform.d
          echo "{\"credentials\":{\"app.terraform.io\":{\"token\":\"$TF_CLOUD_TOKEN\"}}}" > ~/.terraform.d/credentials.tfrc.json
        env:
          TF_CLOUD_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}

      - name: Terraform Init
        run: terraform init -input=false -reconfigure
        env:
          TF_CLOUD_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan
        env:
          TF_CLOUD_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}

      - name: Terraform Apply
        run: terraform apply
        env:
          TF_CLOUD_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}
