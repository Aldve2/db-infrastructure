name: Terraform Pipeline

on:
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destroy infrastructure'
        required: false
        default: 'false'
        type: boolean

env:
  AWS_REGION: us-east-1
  TF_STATE_ARTIFACT: 'terraform-state'
  TF_STATE_FILE: 'terraform.tfstate'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Download previous Terraform state
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.TF_STATE_ARTIFACT }}
          path: .
          if-no-files-found: ignore

      - name: Terraform Init
        run: terraform init -input=false
        
      - name: Terraform Destroy
        if: ${{ github.event.inputs.destroy }}
        run: terraform destroy -auto-approve
      

      - name: Terraform Plan
        if: ${{ !github.event.inputs.destroy }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: ${{ !github.event.inputs.destroy }}
        run: terraform apply -auto-approve tfplan
        
      - name: Upload updated Terraform state
        if: always()  # Sube el estado incluso si falla
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TF_STATE_ARTIFACT }}
          path: ${{ env.TF_STATE_FILE }}
          retention-days: 3
          if-no-files-found: error
